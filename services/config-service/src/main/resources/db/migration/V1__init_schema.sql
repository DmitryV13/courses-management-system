--AUTHORITIES TABLE
CREATE TABLE IF NOT EXISTS authorities
(
    name VARCHAR(30) NOT NULL,
    CONSTRAINT pk_authorities PRIMARY KEY (name)
);

--COURSES TABLE
CREATE TABLE IF NOT EXISTS courses
(
    name            VARCHAR(50) NOT NULL,
    description     VARCHAR(255),
    enrollment_type SMALLINT NOT NULL,
    CONSTRAINT pk_courses PRIMARY KEY (name)
);

--USERS TABLE
CREATE TABLE IF NOT EXISTS users
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username   VARCHAR(50)                             NOT NULL,
    password   VARCHAR(60)                             NOT NULL,
    email      VARCHAR(60)                             NOT NULL,
    first_name VARCHAR(60),
    last_name  VARCHAR(60),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

--USERS-AUTHORITIES TABLE
CREATE TABLE IF NOT EXISTS users_authorities
(
    authority_name VARCHAR(255) NOT NULL,
    user_id        BIGINT       NOT NULL,
    CONSTRAINT pk_users_authorities PRIMARY KEY (authority_name, user_id)
);

ALTER TABLE users_authorities
    ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE users_authorities
    ADD CONSTRAINT fk_authority_name FOREIGN KEY (authority_name) REFERENCES authorities (name);

--USERS-COURSES TABLE
CREATE TABLE IF NOT EXISTS users_courses
(
    course_name VARCHAR(50) NOT NULL,
    user_id     BIGINT      NOT NULL,
    CONSTRAINT pk_users_courses PRIMARY KEY (course_name, user_id)
);

ALTER TABLE users_courses
    ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE users_courses
    ADD CONSTRAINT fk_course_name FOREIGN KEY (course_name) REFERENCES courses (name);

--REVIEWS TABLE
CREATE TABLE IF NOT EXISTS reviews
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text        VARCHAR(255)                            NOT NULL,
    course_name VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_reviews PRIMARY KEY (id)
);

ALTER TABLE reviews
    ADD CONSTRAINT fk_course_name FOREIGN KEY (course_name) REFERENCES courses (name);

--MATERIALS TABLE
CREATE TABLE IF NOT EXISTS materials
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    topic     VARCHAR(255)                            NOT NULL,
    text_ref  VARCHAR(255)                            NOT NULL,
    video_ref VARCHAR(255)                            NOT NULL,
    course_name VARCHAR(50)                           NOT NULL,
    CONSTRAINT pk_materials PRIMARY KEY (id)
);

ALTER TABLE materials
    ADD CONSTRAINT fk_course_name FOREIGN KEY (course_name) REFERENCES courses (name);

--QUIZZES TABLE
CREATE TABLE IF NOT EXISTS quizzes
(
    name        VARCHAR(50) NOT NULL,
    course_name VARCHAR(50) NOT NULL,
    CONSTRAINT pk_quizzes PRIMARY KEY (name)
);

ALTER TABLE quizzes
    ADD CONSTRAINT fk_course_name FOREIGN KEY (course_name) REFERENCES courses (name);

--QUESTIONS TABLE
CREATE TABLE IF NOT EXISTS questions
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    question    VARCHAR(255)                         NOT NULL,
    quiz_name   VARCHAR(50)                          NOT NULL,
    CONSTRAINT pk_questions PRIMARY KEY (id)
);

ALTER TABLE questions
    ADD CONSTRAINT fk_quiz_name FOREIGN KEY (quiz_name) REFERENCES quizzes (name);
